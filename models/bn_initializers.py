import torchdef uniform(w):    if isinstance(w, torch.nn.BatchNorm2d):        w.weight_data = torch.rand(w.weight.data.shape)        w.bias_data = torch.zeros_like(w.bias.data)def fixed(w):    if isinstance(w, torch.nn.BatchNorm2d):        w.weight_data = torch.ones_like(w.weight_data)        w.bias_data = torch.zeros_like(w.bias.data)def oneone(w):    if isinstance(w, torch.nn.BatchNorm2d):        w.weight_data = torch.ones_like(w.weight_data)        w.bias_data = torch.ones_like(w.bias.data)def positivenegative(w):    if isinstance(w, torch.nn.BatchNorm2d):        uniform(w)        w.weight_data = w.weight_data*2 - 1        w.bias_data = torch.zeros_like(w.bias.data)